{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\CreateGenres.tsx\",\n  _s = $RefreshSig$();\nimport { useHistory } from \"react-router\";\nimport Button from \"../utils/Button/Button\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport TextField from \"../form/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenres() {\n  _s();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\"\n      },\n      onSubmit: value => {\n        console.log(value);\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"This field is required\").firstLetterUpperCase()\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          field: \"name\",\n          displayField: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Save Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CreateGenres, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = CreateGenres;\nvar _c;\n$RefreshReg$(_c, \"CreateGenres\");","map":{"version":3,"names":["useHistory","Button","Formik","Form","Link","Yup","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenres","_s","history","children","initialValues","name","onSubmit","value","console","log","validationSchema","object","string","required","firstLetterUpperCase","formikProps","field","displayField","fileName","_jsxFileName","lineNumber","columnNumber","disabled","isSubmitting","type","className","to","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/CreateGenres.tsx"],"sourcesContent":["import { useHistory } from \"react-router\";\r\nimport Button from \"../utils/Button/Button\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport TextField from \"../form/TextField\";\r\nexport default function CreateGenres() {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Formik initialValues={{\r\n                name: \"\"\r\n            }}\r\n                onSubmit={value => {\r\n                    console.log(value);\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    name: Yup.string().required(\"This field is required\").firstLetterUpperCase()\r\n                })}\r\n            >\r\n                {(formikProps) => (\r\n                    <Form>\r\n                        <TextField field=\"name\" displayField=\"Name\"></TextField>\r\n                        <Button disabled={formikProps.isSubmitting} type=\"submit\">Save Change</Button>\r\n                        <Link className=\"btn btn-secondary\" to=\"/genres\">Cancel</Link>\r\n                    </Form>\r\n                )}\r\n\r\n\r\n            </Formik>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,OAAO,GAAGb,UAAU,CAAC,CAAC;EAC5B,oBACIQ,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA,CAACN,MAAM;MAACa,aAAa,EAAE;QACnBC,IAAI,EAAE;MACV,CAAE;MACEC,QAAQ,EAAEC,KAAK,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAE;MACFG,gBAAgB,EAAEhB,GAAG,CAACiB,MAAM,CAAC;QACzBN,IAAI,EAAEX,GAAG,CAACkB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,wBAAwB,CAAC,CAACC,oBAAoB,CAAC;MAC/E,CAAC,CAAE;MAAAX,QAAA,EAEDY,WAAW,iBACTlB,OAAA,CAACL,IAAI;QAAAW,QAAA,gBACDN,OAAA,CAACF,SAAS;UAACqB,KAAK,EAAC,MAAM;UAACC,YAAY,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACxDxB,OAAA,CAACP,MAAM;UAACgC,QAAQ,EAAEP,WAAW,CAACQ,YAAa;UAACC,IAAI,EAAC,QAAQ;UAAArB,QAAA,EAAC;QAAW;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9ExB,OAAA,CAACJ,IAAI;UAACgC,SAAS,EAAC,mBAAmB;UAACC,EAAE,EAAC,SAAS;UAAAvB,QAAA,EAAC;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGG;EAAC,gBAEX,CAAC;AAEX;AAACpB,EAAA,CA3BuBD,YAAY;EAAA,QAChBX,UAAU;AAAA;AAAAsC,EAAA,GADN3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}