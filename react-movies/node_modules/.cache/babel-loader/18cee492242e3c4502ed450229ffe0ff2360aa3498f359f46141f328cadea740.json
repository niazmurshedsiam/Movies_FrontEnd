{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\EditGenres.tsx\",\n  _s = $RefreshSig$();\nimport { useHistory, useParams } from \"react-router\";\nimport GenreForm from \"./GenreForm\";\nimport axios from \"axios\";\nimport { urlGenres } from \"../endpoints\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"../utils/Loading/Loading\";\nimport DisplayErrors from \"../utils/DisplayErrors/DisplayErrors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditGenres() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [genre, setGenre] = useState();\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`${urlGenres}/${id}`).then(response => {\n      setGenre(response.data);\n    });\n  }, [id]);\n  async function edit(genreToEdit) {\n    try {\n      await axios.put(`${urlGenres}/${id}`, genreToEdit);\n      history.push('/genres');\n    } catch (e) {\n      if (e) setErrors(errors);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), genre ? /*#__PURE__*/_jsxDEV(GenreForm, {\n      model: genre,\n      onSubmit: async value => {\n        await edit(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n}\n_s(EditGenres, \"2vtJYi2LcEb5d3/iO1i6Z05KtYY=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditGenres;\nvar _c;\n$RefreshReg$(_c, \"EditGenres\");","map":{"version":3,"names":["useHistory","useParams","GenreForm","axios","urlGenres","useEffect","useState","Loading","DisplayErrors","jsxDEV","_jsxDEV","Fragment","_Fragment","EditGenres","_s","id","genre","setGenre","errors","setErrors","history","get","then","response","data","edit","genreToEdit","put","push","e","children","fileName","_jsxFileName","lineNumber","columnNumber","model","onSubmit","value","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/EditGenres.tsx"],"sourcesContent":["import { useHistory, useParams } from \"react-router\"\r\nimport GenreForm from \"./GenreForm\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { urlGenres } from \"../endpoints\";\r\nimport { genreCreationDTO } from \"./genres.model\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Loading from \"../utils/Loading/Loading\";\r\nimport DisplayErrors from \"../utils/DisplayErrors/DisplayErrors\";\r\n\r\nexport default function EditGenres() {\r\n    const { id }: any = useParams();\r\n    const [genre, setGenre] = useState<genreCreationDTO>();\r\n    const [errors, setErrors] = useState<string[]>([]);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        axios.get(`${urlGenres}/${id}`)\r\n            .then((response: AxiosResponse<genreCreationDTO>) => {\r\n                setGenre(response.data);\r\n            })\r\n    }, [id]);\r\n    async function edit(genreToEdit: genreCreationDTO) {\r\n        try {\r\n            await axios.put(`${urlGenres}/${id}`, genreToEdit)\r\n            history.push('/genres');\r\n        }\r\n        catch (e) {\r\n            if (e)\r\n                setErrors(errors);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Edit Genres</h3>\r\n            <DisplayErrors errors={errors}></DisplayErrors>\r\n            {genre ? <GenreForm model={genre}\r\n                onSubmit={async value => {\r\n                    await edit(value);\r\n                }}\r\n            ></GenreForm> : <Loading></Loading>}\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,cAAc;AACpD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAyB,OAAO;AAC5C,SAASC,SAAS,QAAQ,cAAc;AAExC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,aAAa,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjE,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAQ,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAmB,CAAC;EACtD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAMc,OAAO,GAAGpB,UAAU,CAAC,CAAC;EAC5BK,SAAS,CAAC,MAAM;IACZF,KAAK,CAACkB,GAAG,CAAE,GAAEjB,SAAU,IAAGW,EAAG,EAAC,CAAC,CAC1BO,IAAI,CAAEC,QAAyC,IAAK;MACjDN,QAAQ,CAACM,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACV,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EACR,eAAeU,IAAIA,CAACC,WAA6B,EAAE;IAC/C,IAAI;MACA,MAAMvB,KAAK,CAACwB,GAAG,CAAE,GAAEvB,SAAU,IAAGW,EAAG,EAAC,EAAEW,WAAW,CAAC;MAClDN,OAAO,CAACQ,IAAI,CAAC,SAAS,CAAC;IAC3B,CAAC,CACD,OAAOC,CAAC,EAAE;MACN,IAAIA,CAAC,EACDV,SAAS,CAACD,MAAM,CAAC;IACzB;EAEJ;EAGA,oBACIR,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA,CAACF,aAAa;MAACU,MAAM,EAAEA;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,EAC9ClB,KAAK,gBAAGN,OAAA,CAACR,SAAS;MAACiC,KAAK,EAAEnB,KAAM;MAC7BoB,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB,MAAMZ,IAAI,CAACY,KAAK,CAAC;MACrB;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,gBAAGxB,OAAA,CAACH,OAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA,eACrC,CAAC;AAEX;AAACpB,EAAA,CAnCuBD,UAAU;EAAA,QACVZ,SAAS,EAGbD,UAAU;AAAA;AAAAsC,EAAA,GAJNzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}