{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\IndexGenres.tsx\";\nimport { urlGenres } from '../endpoints';\nimport IndexEntity from '../utils/IndexEntity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndexGenres() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IndexEntity, {\n      url: urlGenres,\n      createUrl: \"genres/create\",\n      title: \"Genres\",\n      entityName: \"Genre\",\n      children: (genres, buttons) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: genres === null || genres === void 0 ? void 0 : genres.map(genre => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: buttons(`genres/edit/${genre.id}`, genre.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: genre.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this)]\n          }, genre.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = IndexGenres;\nvar _c;\n$RefreshReg$(_c, \"IndexGenres\");","map":{"version":3,"names":["urlGenres","IndexEntity","jsxDEV","_jsxDEV","Fragment","_Fragment","IndexGenres","children","url","createUrl","title","entityName","genres","buttons","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","id","name","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/IndexGenres.tsx"],"sourcesContent":["import { urlGenres } from '../endpoints';\r\nimport IndexEntity from '../utils/IndexEntity';\r\nimport { genreDTO } from \"./genres.model\";\r\n\r\nexport default function IndexGenres() {\r\n    return (\r\n        <>\r\n            <IndexEntity<genreDTO>\r\n                url={urlGenres} createUrl=\"genres/create\" title=\"Genres\"\r\n                entityName=\"Genre\"\r\n            >\r\n                {(genres, buttons) =>\r\n                    <>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {genres?.map(genre =>\r\n                                <tr key={genre.id}>\r\n                                    <td>\r\n                                        {buttons(`genres/edit/${genre.id}`, genre.id)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {genre.name}\r\n                                    </td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </>}\r\n\r\n            </IndexEntity>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA,CAACF,WAAW;MACRO,GAAG,EAAER,SAAU;MAACS,SAAS,EAAC,eAAe;MAACC,KAAK,EAAC,QAAQ;MACxDC,UAAU,EAAC,OAAO;MAAAJ,QAAA,EAEjBA,CAACK,MAAM,EAAEC,OAAO,kBACbV,OAAA,CAAAE,SAAA;QAAAE,QAAA,gBACIJ,OAAA;UAAAI,QAAA,eACIJ,OAAA;YAAAI,QAAA,gBACIJ,OAAA;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTd,OAAA;cAAAI,QAAA,EAAI;YAAI;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRd,OAAA;UAAAI,QAAA,EACKK,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,GAAG,CAACC,KAAK,iBACdhB,OAAA;YAAAI,QAAA,gBACIJ,OAAA;cAAAI,QAAA,EACKM,OAAO,CAAE,eAAcM,KAAK,CAACC,EAAG,EAAC,EAAED,KAAK,CAACC,EAAE;YAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACLd,OAAA;cAAAI,QAAA,EACKY,KAAK,CAACE;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA,GANAE,KAAK,CAACC,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOb,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA,eACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC,gBAChB,CAAC;AAEX;AAACK,EAAA,GA/BuBhB,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}