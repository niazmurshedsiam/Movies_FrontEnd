{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\IndexGenres.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { urlGenres } from \"../endpoints\";\nimport GenericList from \"../utils/GenericList/GenericList\";\nimport Button from \"../utils/Button/Button\";\nimport Pagination from \"../utils/Pagination\";\nimport RecordsPerPageSelect from \"../utils/RecordsPerPageSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndexGenres() {\n  _s();\n  const [genres, setGenres] = useState();\n  const [totalAmountOfPages, setTotalAmountOfPages] = useState(0);\n  const [recordsPerPage, setRecordsPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    axios.get(urlGenres, {\n      params: {\n        page,\n        recordsPerPage\n      }\n    }).then(response => {\n      const totalAmountOfRecords = parseInt(response.headers['totalAmountOfRecords'], 10);\n      setTotalAmountOfPages(Math.ceil(totalAmountOfRecords / recordsPerPage));\n      setGenres(response.data);\n    });\n  }, [page, recordsPerPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn-primary\",\n      href: \"/genres/create\",\n      children: \"Create Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecordsPerPageSelect, {\n      onChange: amountOfRecords => {\n        setPage(1);\n        setRecordsPerPage(amountOfRecords);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: page,\n      totalAmountOfPages: totalAmountOfPages,\n      onChanged: newPage => setPage(newPage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenericList, {\n      list: genres,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: genres === null || genres === void 0 ? void 0 : genres.map(genre => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"btn btn-success\",\n                href: `/genres/${genre.id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: genre.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, genre.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(IndexGenres, \"DpsVzXUes3RjJFSxpJ5XzrSyM7Y=\");\n_c = IndexGenres;\nvar _c;\n$RefreshReg$(_c, \"IndexGenres\");","map":{"version":3,"names":["axios","useEffect","useState","urlGenres","GenericList","Button","Pagination","RecordsPerPageSelect","jsxDEV","_jsxDEV","Fragment","_Fragment","IndexGenres","_s","genres","setGenres","totalAmountOfPages","setTotalAmountOfPages","recordsPerPage","setRecordsPerPage","page","setPage","get","params","then","response","totalAmountOfRecords","parseInt","headers","Math","ceil","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","onChange","amountOfRecords","currentPage","onChanged","newPage","list","map","genre","id","name","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/IndexGenres.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { genreDTO } from \"./genres.model\"\r\nimport { urlGenres } from \"../endpoints\"\r\nimport GenericList from \"../utils/GenericList/GenericList\";\r\nimport Button from \"../utils/Button/Button\";\r\nimport Pagination from \"../utils/Pagination\";\r\nimport RecordsPerPageSelect from \"../utils/RecordsPerPageSelect\";\r\nexport default function IndexGenres() {\r\n    const [genres, setGenres] = useState<genreDTO[]>();\r\n    const [totalAmountOfPages, setTotalAmountOfPages] = useState(0);\r\n    const [recordsPerPage, setRecordsPerPage] = useState(5);\r\n    const [page, setPage] = useState(1);\r\n    useEffect(() => {\r\n        axios.get(urlGenres, {\r\n            params: { page, recordsPerPage }\r\n        })\r\n            .then((response: AxiosResponse<genreDTO[]>) => {\r\n                const totalAmountOfRecords =\r\n                    parseInt(response.headers['totalAmountOfRecords'], 10);\r\n                setTotalAmountOfPages(Math.ceil(totalAmountOfRecords / recordsPerPage));\r\n                setGenres(response.data);\r\n            })\r\n    }, [page, recordsPerPage])\r\n    return (\r\n        <>\r\n            <h3>Genres</h3>\r\n            <a className=\"btn btn-primary\" href=\"/genres/create\">Create Genres</a>\r\n            <RecordsPerPageSelect onChange={amountOfRecords => {\r\n                setPage(1);\r\n                setRecordsPerPage(amountOfRecords);\r\n            }}></RecordsPerPageSelect>\r\n            <Pagination currentPage={page} totalAmountOfPages={totalAmountOfPages} onChanged={newPage => setPage(newPage)}></Pagination>\r\n            <GenericList list={genres}>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genres?.map(genre =>\r\n                            <tr key={genre.id}>\r\n                                <td>\r\n                                    <a className=\"btn btn-success\"\r\n                                        href={`/genres/${genre.id}`}>Edit</a>\r\n                                    <Button className=\"btn btn-danger\">Delete</Button>\r\n                                </td>\r\n                                <td>\r\n                                    {genre.name}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </GenericList>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}