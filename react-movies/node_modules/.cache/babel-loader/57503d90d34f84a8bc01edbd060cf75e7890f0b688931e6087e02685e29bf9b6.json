{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\EditGenres.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router\";\nimport GenreForm from \"./GenreForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditGenres() {\n  _s();\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenreForm, {\n      model: {\n        name: 'Action'\n      },\n      onSubmit: async value => {\n        await new Promise(r => setTimeout(r, 1));\n        console.log(id);\n        console.log(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EditGenres, \"fqO2BJMIKIJIVrbHkq11ivWvqss=\", false, function () {\n  return [useParams];\n});\n_c = EditGenres;\nvar _c;\n$RefreshReg$(_c, \"EditGenres\");","map":{"version":3,"names":["useParams","GenreForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditGenres","_s","id","children","fileName","_jsxFileName","lineNumber","columnNumber","model","name","onSubmit","value","Promise","r","setTimeout","console","log","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/EditGenres.tsx"],"sourcesContent":["import { useParams } from \"react-router\"\r\nimport GenreForm from \"./GenreForm\";\r\n\r\nexport default function EditGenres() {\r\n    const { id }: any = useParams();\r\n    return (\r\n        <>\r\n            <h3>Edit Genres</h3>\r\n            <GenreForm model={{ name: 'Action' }}\r\n                onSubmit={async value => {\r\n                    await new Promise(r => setTimeout(r, 1))\r\n                    console.log(id);\r\n                    console.log(value);\r\n                }}\r\n            ></GenreForm>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC/B,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBV,OAAA,CAACF,SAAS;MAACa,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAS,CAAE;MACjCC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB,MAAM,IAAIC,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,CAAC,CAAC,CAAC;QACxCE,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;QACfa,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MACtB;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA,eACf,CAAC;AAEX;AAACN,EAAA,CAduBD,UAAU;EAAA,QACVN,SAAS;AAAA;AAAAuB,EAAA,GADTjB,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}