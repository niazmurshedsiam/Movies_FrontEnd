{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditGenres() {\n  // const { id }: any = useParams();\n  // const [genre, setGenre] = useState<genreCreationDTO>();\n  // const [errors, setErrors] = useState<string[]>([]);\n  // const history = useHistory();\n  // useEffect(() => {\n  //     axios.get(`${urlGenres}/${id}`)\n  //         .then((response: AxiosResponse<genreCreationDTO>) => {\n  //             setGenre(response.data);\n  //         })\n  // }, [id]);\n  // async function edit(genreToEdit: genreCreationDTO) {\n  //     try {\n  //         await axios.put(`${urlGenres}/${id}`, genreToEdit)\n  //         history.push('/genres');\n  //     }\n  //     catch (e) {\n  //         if (e)\n  //             setErrors(errors);\n  //     }\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = EditGenres;\nvar _c;\n$RefreshReg$(_c, \"EditGenres\");","map":{"version":3,"names":["EditGenres","_jsxDEV","_Fragment","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/EditGenres.tsx"],"sourcesContent":["import { useHistory, useParams } from \"react-router\"\r\nimport GenreForm from \"./GenreForm\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { urlGenres } from \"../endpoints\";\r\nimport { genreCreationDTO } from \"./genres.model\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Loading from \"../utils/Loading/Loading\";\r\nimport DisplayErrors from \"../utils/DisplayErrors/DisplayErrors\";\r\n\r\nexport default function EditGenres() {\r\n    // const { id }: any = useParams();\r\n    // const [genre, setGenre] = useState<genreCreationDTO>();\r\n    // const [errors, setErrors] = useState<string[]>([]);\r\n    // const history = useHistory();\r\n    // useEffect(() => {\r\n    //     axios.get(`${urlGenres}/${id}`)\r\n    //         .then((response: AxiosResponse<genreCreationDTO>) => {\r\n    //             setGenre(response.data);\r\n    //         })\r\n    // }, [id]);\r\n    // async function edit(genreToEdit: genreCreationDTO) {\r\n    //     try {\r\n    //         await axios.put(`${urlGenres}/${id}`, genreToEdit)\r\n    //         history.push('/genres');\r\n    //     }\r\n    //     catch (e) {\r\n    //         if (e)\r\n    //             setErrors(errors);\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <h3>Edit Genres</h3>\r\n            <DisplayErrors errors={errors}></DisplayErrors>\r\n            {genre ? <GenreForm model={genre}\r\n                onSubmit={async value => {\r\n                    await edit(value);\r\n                }}\r\n            ></GenreForm> : <Loading></Loading>} */}\r\n        </>\r\n    )\r\n}"],"mappings":";;AASA,eAAe,SAASA,UAAUA,CAAA,EAAG;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA,oBACIC,OAAA,CAAAC,SAAA,mBAQE,CAAC;AAEX;AAACC,EAAA,GAnCuBH,UAAU;AAAA,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}