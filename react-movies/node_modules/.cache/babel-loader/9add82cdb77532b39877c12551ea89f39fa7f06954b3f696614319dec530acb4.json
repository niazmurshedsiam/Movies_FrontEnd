{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\IndexGenres.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { urlGenres } from \"../endpoints\";\nimport GenericList from \"../utils/GenericList/GenericList\";\nimport Button from \"../utils/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndexGenres() {\n  _s();\n  const [genres, setGenre] = useState();\n  useEffect(() => {\n    axios.get(urlGenres).then(response => {\n      setGenre(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn-primary\",\n      href: \"/genres/create\",\n      children: \"Create Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenericList, {\n      list: genres,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: genres === null || genres === void 0 ? void 0 : genres.map(genre => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"btn btn-success\",\n                href: `/genres/${genre.id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: genre.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, genre.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(IndexGenres, \"14L9fA7ZfmK4Uoomth3b3TO1L2s=\");\n_c = IndexGenres;\nvar _c;\n$RefreshReg$(_c, \"IndexGenres\");","map":{"version":3,"names":["axios","useEffect","useState","urlGenres","GenericList","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","IndexGenres","_s","genres","setGenre","get","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","list","map","genre","id","name","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/IndexGenres.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { genreDTO } from \"./genres.model\"\r\nimport { urlGenres } from \"../endpoints\"\r\nimport GenericList from \"../utils/GenericList/GenericList\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from \"../utils/Button/Button\";\r\nexport default function IndexGenres() {\r\n    const [genres, setGenre] = useState<genreDTO[]>();\r\n\r\n    useEffect(() => {\r\n        axios.get(urlGenres)\r\n            .then((response: AxiosResponse<genreDTO[]>) => {\r\n                setGenre(response.data);\r\n            })\r\n    }, [])\r\n    return (\r\n        <>\r\n            <h3>Genres</h3>\r\n            <a className=\"btn btn-primary\" href=\"/genres/create\">Create Genres</a>\r\n            <GenericList list={genres}>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <th></th>\r\n                        <th>Name</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {genres?.map(genre =>\r\n                            <tr key={genre.id}>\r\n                                <td>\r\n                                    <a className=\"btn btn-success\"\r\n                                        href={`/genres/${genre.id}`}>Edit</a>\r\n                                    <Button className=\"btn btn-danger\">Delete</Button>\r\n                                </td>\r\n                                <td>\r\n                                    {genre.name}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </GenericList>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,WAAW,MAAM,kCAAkC;AAE1D,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC5C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAa,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZD,KAAK,CAACc,GAAG,CAACX,SAAS,CAAC,CACfY,IAAI,CAAEC,QAAmC,IAAK;MAC3CH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACff,OAAA;MAAGgB,SAAS,EAAC,iBAAiB;MAACC,IAAI,EAAC,gBAAgB;MAAAN,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtEf,OAAA,CAACH,WAAW;MAACqB,IAAI,EAAEb,MAAO;MAAAM,QAAA,eACtBX,OAAA;QAAOgB,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBAClCX,OAAA;UAAAW,QAAA,gBACIX,OAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTf,OAAA;YAAAW,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACRf,OAAA;UAAAW,QAAA,EACKN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEc,GAAG,CAACC,KAAK,iBACdpB,OAAA;YAAAW,QAAA,gBACIX,OAAA;cAAAW,QAAA,gBACIX,OAAA;gBAAGgB,SAAS,EAAC,iBAAiB;gBAC1BC,IAAI,EAAG,WAAUG,KAAK,CAACC,EAAG,EAAE;gBAAAV,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACzCf,OAAA,CAACF,MAAM;gBAACkB,SAAS,EAAC,gBAAgB;gBAAAL,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACLf,OAAA;cAAAW,QAAA,EACKS,KAAK,CAACE;YAAI;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA,GARAK,KAAK,CAACC,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eAChB,CAAC;AAEX;AAACX,EAAA,CArCuBD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}