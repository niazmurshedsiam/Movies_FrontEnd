{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\utils\\\\IndexEntity.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"./Button/Button\";\nimport customConfirm from \"./customConfirm\";\nimport RecordsPerPageSelect from \"./RecordsPerPageSelect\";\nimport Pagination from \"./Pagination\";\nimport GenericList from \"./GenericList/GenericList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndexEntity(props) {\n  _s();\n  const [entities, setEntities] = useState();\n  const [totalAmountOfPages, setTotalAmountOfPages] = useState(0);\n  const [recordsPerPage, setRecordsPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    loadData();\n  }, [page, recordsPerPage]);\n  function loadData() {\n    axios.get(props.url, {\n      params: {\n        page,\n        recordsPerPage\n      }\n    }).then(response => {\n      const totalAmountOfRecords = parseInt(response.headers['totalAmountOfRecords'], 10);\n      setTotalAmountOfPages(Math.ceil(totalAmountOfRecords / recordsPerPage));\n      setEntities(response.data);\n    });\n  }\n  async function deleteEntity(id) {\n    try {\n      await axios.delete(`${props.url}/${id}`);\n      loadData();\n    } catch (error) {\n      if (error) {\n        console.error(error);\n      }\n    }\n  }\n  const buttons = (editUrl, id) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn-success\",\n      href: editUrl,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-danger\",\n      onClick: () => customConfirm(() => deleteEntity(id)),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn-primary\",\n      href: props.createUrl,\n      children: [\"Create \", props.entityName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecordsPerPageSelect, {\n      onChange: amountOfRecords => {\n        setPage(1);\n        setRecordsPerPage(amountOfRecords);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: page,\n      totalAmountOfPages: totalAmountOfPages,\n      onChange: newPage => setPage(newPage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenericList, {\n      list: entities,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: props.children(entities, buttons)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(IndexEntity, \"/69Z2akiBAK8x4tEP6T4dt5SoSE=\");\n_c = IndexEntity;\nvar _c;\n$RefreshReg$(_c, \"IndexEntity\");","map":{"version":3,"names":["axios","useEffect","useState","Button","customConfirm","RecordsPerPageSelect","Pagination","GenericList","jsxDEV","_jsxDEV","Fragment","_Fragment","IndexEntity","props","_s","entities","setEntities","totalAmountOfPages","setTotalAmountOfPages","recordsPerPage","setRecordsPerPage","page","setPage","loadData","get","url","params","then","response","totalAmountOfRecords","parseInt","headers","Math","ceil","data","deleteEntity","id","delete","error","console","buttons","editUrl","children","className","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","createUrl","entityName","onChange","amountOfRecords","currentPage","newPage","list","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/utils/IndexEntity.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"./Button/Button\";\r\nimport customConfirm from \"./customConfirm\";\r\nimport RecordsPerPageSelect from \"./RecordsPerPageSelect\";\r\nimport Pagination from \"./Pagination\";\r\nimport GenericList from \"./GenericList/GenericList\";\r\nimport { ReactElement } from \"react-markdown/lib/react-markdown\";\r\n\r\n\r\nexport default function IndexEntity<T>(props: indexEntityProps<T>) {\r\n    const [entities, setEntities] = useState<T[]>();\r\n    const [totalAmountOfPages, setTotalAmountOfPages] = useState(0);\r\n    const [recordsPerPage, setRecordsPerPage] = useState(5);\r\n    const [page, setPage] = useState(1);\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [page, recordsPerPage]);\r\n\r\n    function loadData() {\r\n        axios.get(props.url, {\r\n            params: { page, recordsPerPage }\r\n        })\r\n            .then((response: AxiosResponse<T[]>) => {\r\n                const totalAmountOfRecords =\r\n                    parseInt(response.headers['totalAmountOfRecords'], 10);\r\n                setTotalAmountOfPages(Math.ceil(totalAmountOfRecords / recordsPerPage));\r\n                setEntities(response.data);\r\n            })\r\n    }\r\n\r\n    async function deleteEntity(id: number) {\r\n        try {\r\n            await axios.delete(`${props.url}/${id}`);\r\n            loadData();\r\n        }\r\n        catch (error) {\r\n            if (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    const buttons = (editUrl: string, id: number) => <>\r\n        <a className=\"btn btn-success\"\r\n            href={editUrl}>Edit</a>\r\n\r\n        <Button className=\"btn btn-danger\" onClick={() => customConfirm(() => deleteEntity(id))}>Delete</Button>\r\n\r\n    </>\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <a className=\"btn btn-primary\" href={props.createUrl}>Create {props.entityName}</a>\r\n            <RecordsPerPageSelect onChange={amountOfRecords => {\r\n                setPage(1);\r\n                setRecordsPerPage(amountOfRecords);\r\n            }}></RecordsPerPageSelect>\r\n            <Pagination currentPage={page} totalAmountOfPages={totalAmountOfPages} onChange={newPage => setPage(newPage)}></Pagination>\r\n            <GenericList list={entities}>\r\n                <table className=\"table table-striped\">\r\n                    {props.children(entities!, buttons)}\r\n                </table>\r\n            </GenericList>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface indexEntityProps<T> {\r\n    url: string;\r\n    title: string;\r\n    createUrl: string;\r\n    children(entities: T[],\r\n        buttons: (editUrl: string, id: number) => ReactElement): ReactElement;\r\n    entityName: string;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}