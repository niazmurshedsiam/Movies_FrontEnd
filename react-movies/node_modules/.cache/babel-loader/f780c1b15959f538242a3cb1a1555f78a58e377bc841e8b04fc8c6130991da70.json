{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leads\\\\MyWork\\\\React 17 and ASP.NET Core 6\\\\Movies\\\\ForntEnd\\\\react-movies\\\\src\\\\genres\\\\EditGenres.tsx\";\nimport GenreForm from \"./GenreForm\";\nimport { urlGenres } from \"../endpoints\";\nimport EditEntity from \"../utils/EditEntity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditGenres() {\n  // const { id }: any = useParams();\n  // const [genre, setGenre] = useState<genreCreationDTO>();\n  // const [errors, setErrors] = useState<string[]>([]);\n  // const history = useHistory();\n  // useEffect(() => {\n  //     axios.get(`${urlGenres}/${id}`)\n  //         .then((response: AxiosResponse<genreCreationDTO>) => {\n  //             setGenre(response.data);\n  //         })\n  // }, [id]);\n  // async function edit(genreToEdit: genreCreationDTO) {\n  //     try {\n  //         await axios.put(`${urlGenres}/${id}`, genreToEdit)\n  //         history.push('/genres');\n  //     }\n  //     catch (e) {\n  //         if (e)\n  //             setErrors(errors);\n  //     }\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EditEntity, {\n      url: urlGenres,\n      entityName: \"Genres\",\n      indexURL: \"/genres\",\n      children: (entity, edit) => /*#__PURE__*/_jsxDEV(GenreForm, {\n        model: entity,\n        onSubmit: async value => {\n          await edit(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = EditGenres;\nvar _c;\n$RefreshReg$(_c, \"EditGenres\");","map":{"version":3,"names":["GenreForm","urlGenres","EditEntity","jsxDEV","_jsxDEV","Fragment","_Fragment","EditGenres","children","url","entityName","indexURL","entity","edit","model","onSubmit","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Leads/MyWork/React 17 and ASP.NET Core 6/Movies/ForntEnd/react-movies/src/genres/EditGenres.tsx"],"sourcesContent":["import GenreForm from \"./GenreForm\";\r\nimport { urlGenres } from \"../endpoints\";\r\nimport { genreCreationDTO, genreDTO } from \"./genres.model\";\r\nimport EditEntity from \"../utils/EditEntity\";\r\n\r\nexport default function EditGenres() {\r\n    // const { id }: any = useParams();\r\n    // const [genre, setGenre] = useState<genreCreationDTO>();\r\n    // const [errors, setErrors] = useState<string[]>([]);\r\n    // const history = useHistory();\r\n    // useEffect(() => {\r\n    //     axios.get(`${urlGenres}/${id}`)\r\n    //         .then((response: AxiosResponse<genreCreationDTO>) => {\r\n    //             setGenre(response.data);\r\n    //         })\r\n    // }, [id]);\r\n    // async function edit(genreToEdit: genreCreationDTO) {\r\n    //     try {\r\n    //         await axios.put(`${urlGenres}/${id}`, genreToEdit)\r\n    //         history.push('/genres');\r\n    //     }\r\n    //     catch (e) {\r\n    //         if (e)\r\n    //             setErrors(errors);\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <EditEntity<genreCreationDTO, genreDTO>\r\n                url={urlGenres} entityName=\"Genres\"\r\n                indexURL=\"/genres\"\r\n            >\r\n                {(entity, edit) =>\r\n                    <GenreForm model={entity}\r\n                        onSubmit={async value => {\r\n                            await edit(value);\r\n                        }}\r\n                    ></GenreForm>}\r\n            </EditEntity>\r\n            {/* <h3>Edit Genres</h3>\r\n            <DisplayErrors errors={errors}></DisplayErrors>\r\n            {genre ? <GenreForm model={genre}\r\n                onSubmit={async value => {\r\n                    await edit(value);\r\n                }}\r\n            ></GenreForm> : <Loading></Loading>} */}\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,UAAUA,CAAA,EAAG;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAEIJ,OAAA,CAACF,UAAU;MACPO,GAAG,EAAER,SAAU;MAACS,UAAU,EAAC,QAAQ;MACnCC,QAAQ,EAAC,SAAS;MAAAH,QAAA,EAEjBA,CAACI,MAAM,EAAEC,IAAI,kBACVT,OAAA,CAACJ,SAAS;QAACc,KAAK,EAAEF,MAAO;QACrBG,QAAQ,EAAE,MAAMC,KAAK,IAAI;UACrB,MAAMH,IAAI,CAACG,KAAK,CAAC;QACrB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBAQf,CAAC;AAEX;AAACC,EAAA,GA/CuBd,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}